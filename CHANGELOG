UPDATE 20/10/2025

Update overview: CardioMat now implements a pipeline for whole heart cardiac
electrophysiology simulations. This include the creation of atrial and
ventricular models, as in previous version, and connecting the atria and the
His-Purkinje system with a model of the atrioventricular node.
Specific visualization functions for whole heart models are now available.
An error in the management of PMJ retrograde conduction was
introduced with the last update, and has now been fixed. 
CardioMat now also allows computation of extracellular fields by assuming 
the heart tissue to be immersed in an infinite homogeneous conductor.

1) adas2vox: removed cloned code by using cleanGeometry function.

2) AVnodeFun: function implementing atrioventricular node model with a 
    finite state machine.

3) Biasi_Tognetti: added dv2dt as last model output.

4) cleanGeometry: added function to remove isolated voxels from the geometry.

5) computePhase: removed unused variables.

6) computeUVC: changed variables name for consistency between functions.

7) createVideo: added video resolution as input parameters. Time resolution
is now saved in the .mat file of the simulations, thus this input has been 
removed.

8) createVideo_wh: added function equivalent to createVideo for whole-heart
models.

9) CRN_1998: added dv2dt as last model output.

10) generateFibers: Now it accepts transmural input also as a vector with
length equal to nnz(VoxelMat).

11) heartMatrixFib: updated documentation.

12) insertAVN: added function to attach a user selected AVN point at the 
beginning of the Purkinje tree. The AVN point is selected from the atria.

13) LFvector: added function to assemble the lead field vectors in the
assumption of infinite homogeneous volume conductor. 

14) MyModel:  added dv2dt as last model output.

15) PKJnodeFun: removed development comments.

16) plotFibers: Now it accepts transmural input also as a vector with
length equal to nnz(VoxelMat).

17) plotFibers_wh: added function equivalent to plotFibesr for whole-heart
models (to visualize whole heart fibers).

18) plotFrame: added time instant in the figure title.

19) plotFrame_wh: added function equivalent to plotFibers for whole-heart
models (to visualize whole heart simulations interactively).

20) plotPurkinje_wh: added function equivalent to plotPurkinje for whole-heart
models (to visualize AVN and His-Purkinje system on the whole heart).

21) PlotVoxelE: solved colormap bug introduced with MATLAB R2025a.

22) runSimulation:
    - An additional delay at the level of the right and/ left bundle branches
        can be defined.
    - Save and load state functionalities now consider also the His-Purkinje
        network states.
    - added dv2dt as output of the model function for correct activation of 
        the PMJ.
    - Computation of extracellular potential by assuming infinite homogeneous
        conductor is now available (type help runSimulation for parameter
        details).
    
23) runSimulation_wh: added function for whole heart cardiac electrophysiology
    simulations. Type help runSimulation_wh for a complete list of user-defined
    parameters

24) TNNP_2004: added dv2dt as last model output.

25) TP_2006: added dv2dt as last model output.

26) VolShFrame: now displays current time in the command window.

27) VolShFrame_wh: added function equivalent to VolShFrame for whole-heart
models (to visualize whole heart simulations in the 3D MATLAB viewer).

28) removed cloned code by using cleanGeometry function.

UPDATE 25/07/2025

Update overview: CardioMat now allows for the use of different ionic models 
in the monodomain model. 3 ionic models are included (TNNP_2004, TP_2006, 
CRN_1998) togheter with a template for the definition of custom ionic models.
GPU management of general ionic models is included, improved, and tested. 
CardioMat interactive function were updated to be compatible with Matlab 
2025a (restore of original Matlab Figure Menu).

1) AUTHORS: updated authors' list

2) bench_model: added function to test ionic model in single cell before the
    the use in monodomain model

3) Biasi_Tognetti: new function replacing "single_step". This function 
    implements the Biasi-Tognetti model that was already available in
    CardioMat.

4) CRN_1998: added Courtemanche-Ramirez-Nattel ionic model for atrial action
    potential.

5) MyModel: added documented template for definition of custom ionic models

6) plotFrame: enabled membrane potential plot in click point. The frame
    number in the figure title has been substituted with the time instant.
    Restored previous release Matlab Figure Menu.

7) PlotVoxelE: restored previous release Matlab Figure Menu.

8) runSimulation: added support for different ionic models. A new options 
    subfield (options.model) can be passed to the function defining the ionic 
    model that must be used in the mondomain solver. Restored previous
    release Matlab Figure Menu for the visualization of results.

9) selectMPoint: restored previous release Matlab Figure Menu.

10) selectPoint: restored previous release Matlab Figure Menu.

11) selectSurface: restored previous release Matlab Figure Menu.

12) selectVolume: restored previous release Matlab Figure Menu.

13) TNNP_2004: added TenTusscher-Noble-Noble-Panfilov model for ventricular
    action potential.

14) TP_2006: added TenTusscher-Panfilov model (2006) for ventricular
    action potential.


UPDATE 20/01/2025

Update overview: the purkinje network is now simulated with an eikonal model
allowing for anterograde and retrograde propagation. Purkinje-muscular
junctions are now modeled with a finite state machine.
GPU memory requirements to run models are significantly reduced.
We added functions for atrial models construction.


1) runSimulation: 
    - Purkinje simulation with Eikonal model
    - added options for phase field computaion
    - added save_state and load_state options
    - added support for multiple stimulations
    - improved fibrosis management
    - removal of PMJ in the border zone.
    - stop simulation when all tissue is at rest and no further stimulation is programmed

2) ahaSegments: added function to compute AHA segments and their centroids

3) colormaps.mat: added custom colormaps

4) computeLats: minor updates (added start and end time definitions)

5) computePhase: reduced memory requirements for phase field computation

6) computeRotational: added function to compute rotational coordinate in the ventricles

7) createPurkinje: reordered purkinje nodes in such a way the first node is the root node

8)createVideo: improved documentation and usage.

9) dist_pkj: added function to compute distances between purkinje nodes along the tree

10) extractLat: added start and end times definition 

11) extrapField: improved readibility

12) HeartMatrixFib: improved memory management and efficiency of the code

13) laplaceMatrix: modified to compute laplace matrix on an irregular geometry

14) PKJnodeFun: added finite state machine function to model Purkinje muscular junction

15) plotFrame: improved visualization and controls.

16) single_step: updated ionic model

17) VolSh: fix bugs at the boundary by using a larger extrapolation

18) VolShFrame: see VolSh

19) vtk2vox: added TOL parameter; added control for disconnected voxels;
    changed 3D image color.

20) selectSurface, selectVolume, selectPoint: improved user interface with cutplane

21) Authors list updated

22) PlotVoxelE: added function for interactive visualization of 3D voxelized images

23) DefineCP: improved point selection with superimposed fibrosis

24) lat2shell: faster interpolation, core scar can be represented in white.

25) tagAtria: added function to tag atrial surfaces.

26) computeFieldsLA: added function to compute distance fields on right atrium

27) computeFieldsLA: added function to compute distance fields on left atrium

28) computeDistanceFields: added function to compute transmural and transatrial
    coordinates in biatrial geometries. The function also computes distance 
    fields useful for the  assignment of fiber orientation

29) generateFiberLA: added function to generate cardiac fiber in the left atrium

30) generateFiberRA: added function to generate cardiac fiber in the right atrium

31) generateFiberAtria: added function to generate cardiac fiber in biatrial geometries

32) read_vtk and read_vtk_3d: close file at the end of reading.